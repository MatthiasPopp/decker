decker-0.4.0.0: build (lib + exe)
Preprocessing library for decker-0.4.0.0..
Building library for decker-0.4.0.0..
[14 of 16] Compiling Filter           ( src/Filter.hs, .stack-work/dist/x86_64-osx/Cabal-2.2.0.1/build/Filter.o )

/Users/henrik/workspace/decker/src/Filter.hs:150:15: error:
    • Couldn't match expected type ‘Attr -> f Attr’
                  with actual type ‘Slide’
    • In the pattern: Slide (Just header) _
      In an equation for ‘attributes’:
          attributes (Slide (Just header) _) = attributes header
      In the instance declaration for ‘HasAttr Slide’
    • Relevant bindings include
        attributes :: (Attr -> f Attr) -> Slide -> f Slide
          (bound at src/Filter.hs:150:3)
    |
150 |   attributes (Slide (Just header) _) = attributes header
    |               ^^^^^^^^^^^^^^^^^^^^^

/Users/henrik/workspace/decker/src/Filter.hs:150:51: error:
    • Couldn't match expected type ‘Attr -> f Attr’
                  with actual type ‘Block’
    • In the first argument of ‘attributes’, namely ‘header’
      In the expression: attributes header
      In an equation for ‘attributes’:
          attributes (Slide (Just header) _) = attributes header
    • Relevant bindings include
        attributes :: (Attr -> f Attr) -> Slide -> f Slide
          (bound at src/Filter.hs:150:3)
    |
150 |   attributes (Slide (Just header) _) = attributes header
    |                                                   ^^^^^^

/Users/henrik/workspace/decker/src/Filter.hs:151:18: error:
    • Couldn't match type ‘(String, [String], [(String, String)])’
                     with ‘Slide -> f Slide’
      Expected type: Slide -> f Slide
        Actual type: Attr
    • In the expression: nullAttr
      In an equation for ‘attributes’: attributes _ = nullAttr
      In the instance declaration for ‘HasAttr Slide’
    • Relevant bindings include
        attributes :: (Attr -> f Attr) -> Slide -> f Slide
          (bound at src/Filter.hs:150:3)
    |
151 |   attributes _ = nullAttr
    |                  ^^^^^^^^

/Users/henrik/workspace/decker/src/Filter.hs:168:15: error:
    • Couldn't match expected type ‘Attr -> f Attr’
                  with actual type ‘[Attr -> f Attr]’
    • In the pattern: first : _
      In an equation for ‘attributes’:
          attributes (first : _) = attributes first
      In the instance declaration for ‘HasAttr [Block]’
    • Relevant bindings include
        attributes :: (Attr -> f Attr) -> [Block] -> f [Block]
          (bound at src/Filter.hs:168:3)
    |
168 |   attributes (first:_) = attributes first
    |               ^^^^^^^

/Users/henrik/workspace/decker/src/Filter.hs:169:18: error:
    • Couldn't match type ‘(String, [String], [(String, String)])’
                     with ‘[Block] -> f [Block]’
      Expected type: [Block] -> f [Block]
        Actual type: Attr
    • In the expression: nullAttr
      In an equation for ‘attributes’: attributes _ = nullAttr
      In the instance declaration for ‘HasAttr [Block]’
    • Relevant bindings include
        attributes :: (Attr -> f Attr) -> [Block] -> f [Block]
          (bound at src/Filter.hs:168:3)
    |
169 |   attributes _ = nullAttr
    |                  ^^^^^^^^

/Users/henrik/workspace/decker/src/Filter.hs:172:15: error:
    • Couldn't match expected type ‘Attr -> f Attr’
                  with actual type ‘Maybe (Attr -> f Attr)’
    • In the pattern: Just block
      In an equation for ‘attributes’:
          attributes (Just block) = attributes block
      In the instance declaration for ‘HasAttr (Maybe Block)’
    • Relevant bindings include
        attributes :: (Attr -> f Attr) -> Maybe Block -> f (Maybe Block)
          (bound at src/Filter.hs:172:3)
    |
172 |   attributes (Just block) = attributes block
    |               ^^^^^^^^^^

/Users/henrik/workspace/decker/src/Filter.hs:173:14: error:
    • Couldn't match expected type ‘Attr -> f Attr’
                  with actual type ‘Maybe a3’
    • In the pattern: Nothing
      In an equation for ‘attributes’: attributes Nothing = nullAttr
      In the instance declaration for ‘HasAttr (Maybe Block)’
    • Relevant bindings include
        attributes :: (Attr -> f Attr) -> Maybe Block -> f (Maybe Block)
          (bound at src/Filter.hs:172:3)
    |
173 |   attributes Nothing = nullAttr
    |              ^^^^^^^

/Users/henrik/workspace/decker/src/Filter.hs:173:24: error:
    • Couldn't match type ‘(String, [String], [(String, String)])’
                     with ‘Maybe Block -> f (Maybe Block)’
      Expected type: Maybe Block -> f (Maybe Block)
        Actual type: Attr
    • In the expression: nullAttr
      In an equation for ‘attributes’: attributes Nothing = nullAttr
      In the instance declaration for ‘HasAttr (Maybe Block)’
    • Relevant bindings include
        attributes :: (Attr -> f Attr) -> Maybe Block -> f (Maybe Block)
          (bound at src/Filter.hs:172:3)
    |
173 |   attributes Nothing = nullAttr
    |                        ^^^^^^^^

/Users/henrik/workspace/decker/src/Filter.hs:176:11: error:
    • Couldn't match type ‘a’ with ‘Attr -> f1 Attr’
      ‘a’ is a rigid type variable bound by
        the type signature for:
          classes :: forall a. HasAttr a => a -> [String]
        at src/Filter.hs:175:1-37
      Expected type: a -> [String]
        Actual type: (Attr -> f1 Attr) -> [String]
    • In the expression: sel2 . attributes
      In an equation for ‘classes’: classes = sel2 . attributes
    • Relevant bindings include
        classes :: a -> [String] (bound at src/Filter.hs:176:1)
    |
176 | classes = sel2 . attributes
    |           ^^^^^^^^^^^^^^^^^

/Users/henrik/workspace/decker/src/Filter.hs:179:11: error:
    • Couldn't match type ‘a’ with ‘Attr -> f0 Attr’
      ‘a’ is a rigid type variable bound by
        the type signature for:
          keyvals :: forall a. HasAttr a => a -> [(String, String)]
        at src/Filter.hs:178:1-47
      Expected type: a -> [(String, String)]
        Actual type: (Attr -> f0 Attr) -> [(String, String)]
    • In the expression: sel3 . attributes
      In an equation for ‘keyvals’: keyvals = sel3 . attributes
    • Relevant bindings include
        keyvals :: a -> [(String, String)] (bound at src/Filter.hs:179:1)
    |
179 | keyvals = sel3 . attributes
    |           ^^^^^^^^^^^^^^^^^

/Users/henrik/workspace/decker/src/Filter.hs:340:41: error:
    • Couldn't match type ‘a2 -> f2 a2’
                     with ‘(String, [String], [(String, String)])’
      Expected type: Attr
        Actual type: a2 -> f2 a2
    • Probable cause: ‘attributes’ is applied to too few arguments
      In the first argument of ‘Div’, namely ‘(attributes header)’
      In the expression: Div (attributes header) (header : body)
      In the expression: [Div (attributes header) (header : body)]
    |
340 |       | hasClass "notes" header = [Div (attributes header) (header : body)]
    |                                         ^^^^^^^^^^^^^^^^^

/Users/henrik/workspace/decker/src/Filter.hs:340:52: error:
    • Couldn't match expected type ‘Attr -> f2 Attr’
                  with actual type ‘Block’
    • In the first argument of ‘attributes’, namely ‘header’
      In the first argument of ‘Div’, namely ‘(attributes header)’
      In the expression: Div (attributes header) (header : body)
    |
340 |       | hasClass "notes" header = [Div (attributes header) (header : body)]
    |                                                    ^^^^^^

--  While building custom Setup.hs for package decker-0.4.0.0 using:
      /Users/henrik/.stack/setup-exe-cache/x86_64-osx/Cabal-simple_mPHDZzAJ_2.2.0.1_ghc-8.4.3 --builddir=.stack-work/dist/x86_64-osx/Cabal-2.2.0.1 build lib:decker exe:decker --ghc-options " -ddump-hi -ddump-to-file"
    Process exited with code: ExitFailure 1
